input {
    rabbitmq { host => "localhost"
               port => 5672 
               durable => true 
               exchange => "b2safe" 
               key => "accounting_stats" 
               queue => "accounting" 
               codec => "json"
               type => "irods_accounting"
    } 
} 

filter {

  if [type] == "irods_accounting" {

    ruby {
      code => '
               groups = {}
               event.get("groups").each { |name, members|
                 groups[name] = members.join(",")
               }
               event.set("group_membership", groups)
               tempArray = []
               event.get("collections").each { |k, v|
                 localTuple = {"path" => k, 
                               "size" => v["size"],
                               "objects" => v["objects"],
                               "record_type" => "total"
                              }
                 tempArray << localTuple
                 v["groups"].each { |name, stats|
                   localTuple = {"path" => k,
                                 "size" => stats["size"],
                                 "objects" => stats["objects"],
                                 "record_type" => "group",
                                 "group" => name
                                }
                   if localTuple["objects"] > 0 
                     tempArray << localTuple
                   end
                 }
                 v["users"].each { |name, stats|
                   localTuple = {"path" => k,
                                 "size" => stats["size"],
                                 "objects" => stats["objects"],
                                 "record_type" => "user",
                                 "user" => name
                                }
                   if localTuple["objects"] > 0
                     tempArray << localTuple
                   end
                 }
               }
               event.set("collection", tempArray)
      '
      remove_field => "collections"
      remove_field => "groups"
    }
 
    split {
      field => "collection"
    }
    if [collection][path] == "/sdcCineca" {
      mutate { add_field => { "level" => "root" } }
    }
    mutate {
      rename => [
                 "[collection][size]", "size",
                 "[collection][objects]", "objects",
                 "[collection][path]", "path",
                 "[collection][record_type]", "record_type",
                 "[collection][user]", "user",
                 "[collection][group]", "group"
                ]
      remove_field => "collection" 
      remove_field => "group_membership"
    }

  }
}

output { 
     if [type] == "irods_accounting" {
       elasticsearch {
           hosts => ["130.186.13.123:9199"]
           index => "logstash-sdctest-accounting-%{+YYYY.MM}"
       }
     }
#    stdout { codec => rubydebug } 
}
